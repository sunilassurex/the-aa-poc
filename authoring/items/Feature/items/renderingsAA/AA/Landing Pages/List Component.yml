---
ID: "f5acbe1a-b618-458f-a33f-23fff3319a81"
Parent: "038443e2-8b41-4c2c-ba2a-718794a0e0c3"
Template: "5995f7ca-293b-4930-971c-a758f9976a26"
Path: /sitecore/layout/Renderings/Feature/AA/Landing Pages/List Component
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Software/32x32/element_add.png
- ID: "1a7c85e5-dc0b-490d-9187-bb1dbcb4c72f"
  Hint: Datasource Template
  Value: /sitecore/templates/Feature/AA/LandingPage/List component
- ID: "308e88f5-cd6e-4f8f-bafe-95a47dedefdc"
  Hint: Editable
  Value: 
- ID: "51b435bc-f7b9-478a-9c51-52916af96ff5"
  Hint: Path
  Value: /Views/ContentViewRendering.cshtml
- ID: "56776edf-261c-4abc-9fe7-70c618795239"
  Hint: __Help link
  Value: |
    <link linktype="external" url="https://theaacom.atlassian.net/wiki/spaces/SIT/pages/5004329058" />
- ID: "7d24e54f-5c16-4314-90c9-6051aa1a7da1"
  Hint: Parameters Template
  Value: "{8E81C589-AD43-47D4-A1D3-FB45CCD3D99A}"
- ID: "b5b27af1-25ef-405c-87ce-369b3a004016"
  Hint: Datasource Location
  Value: /sitecore/content/TheAA/Modules/List Component
- ID: "dbbbeca1-21c7-4906-9dd2-493c1efa59a2"
  Hint: __Shared revision
  Value: "088638fa-a110-4778-9bae-0e95dbca091e"
- ID: "f172b787-7b88-4bd5-ae4d-6308e102ef11"
  Hint: Enable Datasource Query
  Value: 
Languages:
- Language: en
  Fields:
  - ID: "577f1689-7de4-4ad2-a15f-7fdc1759285f"
    Hint: __Long description
    Value: This component is used to list a product with Text, Image, CTA and configure image size and background color via configuration
  - ID: "9541e67d-ce8c-4225-803d-33f7f29f09ef"
    Hint: __Short description
    Value: This component is used to list a product with Text, Image, CTA and configure image size and background color via configuration
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20240722T132739Z
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "080c6003-0454-40b9-82f7-8a21e7a95e38"
    - ID: "9e6a6532-99aa-4a0e-aba3-e7259e5429ba"
      Hint: StyleSheets
      Value: |
        .list-component {
            display: flex;
            flex-wrap: wrap;
        }
        .list-component.img-right > figure {
            margin-left: var(--space-large);
            order: 2;
        }
        
        .list-component.img-left > figure {
            margin-right: var(--space-large);
            order: 1;
        }
        .list-component.img-left > div.content{
            order: 2;
        	flex: 1;
        }
        .list-component.img-right > div.content {
            order: 1;
        	flex: 1;
        }
        .list-component .content > h2, .list-component .content > p {
            margin-bottom: var(--space-large);
        }
        .list-component .content > h3 {
            margin-bottom: var(--space-medium);
        }
        .list-component.img-right > div.cta-list {
            order: 3;
            width: 100%;
            margin-top: var(--space-large);
        }
        .list-component > div.content > div.cta-list{
            margin-top: var(--space-large);
        }
        @media screen and (max-width: 1024px){
        	.list-component > figure > img{
        		width: 362px;
        		height: 275px;
        	}
        }
        @media screen and (max-width: 480px) {
        	.list-component.img-right>figure{
        		margin: var(--space-large) 0 0 0;
        	}
        	.list-component.img-left>figure{
        		margin-right: 0px;
        		margin-bottom: var(--space-large);
        	}
        	.list-component>figure>img {
                width: 100%;
            }
        }
    - ID: "acce9b46-1f19-4d3d-a0ec-ed01d807bb7d"
      Hint: RazorView
      Value: |
        @using TheAA.Foundation.Rendering;
        @using TheAA.Application.ViewModels;
        
        @inherits  HtmlTemplateBase<ContentViewRenderingModel>
        
        @if (Model == null)
        {
            return;
        }
        @{
            var mainHeading = Model.GetField("Main Heading");
            var subHeading = Model.GetField("Sub Heading");
            var description = Model.GetField("Description");
            var image = Model.GetField("Image");
            var imageAlignment = Model.GetRenderingParameterLookup("Image Alignment");
        }
        @helper GetBottomText(string imageAlignment, bool showWhenImageAlignmentRight)
        {
            var bottomText = Model.GetField("Bottom Text");
            if (bottomText.HasValueToRender())
            {
                if ((imageAlignment == "right" && showWhenImageAlignmentRight) || 
                (imageAlignment != "right" && !showWhenImageAlignmentRight))
                {
                    @:<div class="cta-list">
                        @bottomText.RenderValue();
                    @:</div>
                }
            }
        }
        <section class="@Model.GetRenderingParameterLookup("Background Color") @Model.GetTopAndBottomPaddings()">
            <div class="container list-component img-@imageAlignment">
                <div class="content">
                    @if (mainHeading.HasValueToRender())
                    {
                        <h2>@mainHeading.RenderValue()</h2>
                    }
                    @if (subHeading.HasValueToRender())
                    {
                        <h3>@subHeading.RenderValue()</h3>
                    }
                    @if (description.HasValueToRender())
                    {
                        <p>@description.RenderValue()</p>
                    }
                    <div class="body-text">
                        @Model.GetField("Body Text").RenderValue()
                    </div>
                    @GetBottomText(imageAlignment, false)
                </div>
                @if (image.HasValueToRender())
                {
                    var imageCaption = Model.GetField("Image caption");
                    <figure>
                        <img src="@image.MediaURL" alt="@image.Alt" class="@Model.GetRenderingParameterLookup("Image Size") @Model.GetRenderingParameterLookup("Image Border Radius")">
                        @if (imageCaption.HasValueToRender())
                        {
                            <figcaption>@imageCaption.RenderValue()</figcaption>
                        }
                    </figure>
                }
                @GetBottomText(imageAlignment, true)
            </div>
        </section>
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\unicorn
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20250522T004122Z
  - Version: 2
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20250509T121051Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\admin
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "683322b3-fbd0-47e5-83d6-5bfd073308bd"
    - ID: "9e6a6532-99aa-4a0e-aba3-e7259e5429ba"
      Hint: StyleSheets
      Value: |
        .list-component { 
            display: flex;
            flex-wrap: wrap;
        }
        .list-component.img-right > figure {
            margin-left: var(--space-large);
            order: 2;
        }
        
        .list-component.img-left > figure {
            margin-right: var(--space-large);
            order: 1;
        }
        .list-component.img-left > div.content{
            order: 2;
        	flex: 1;
        }
        .list-component.img-right > div.content {
            order: 1;
        	flex: 1;
        }
        .list-component .content > h2, .list-component .content > p {
            margin-bottom: var(--space-large);
        }
        .list-component .content > h3 {
            margin-bottom: var(--space-medium);
        }
        .list-component.img-right > div.cta-list {
            order: 3;
            width: 100%;
            margin-top: var(--space-large);
        }
        .list-component > div.content > div.cta-list{
            margin-top: var(--space-large);
        }
        @media screen and (max-width: 1024px){
        	.list-component > figure > img{
        		width: 362px;
        		height: 275px;
        	}
        }
        @media screen and (max-width: 480px) {
        	.list-component.img-right>figure{
        		margin: var(--space-large) 0 0 0;
        	}
        	.list-component.img-left>figure{
        		margin-right: 0px;
        		margin-bottom: var(--space-large);
        	}
        	.list-component>figure>img {
                width: 100%;
            }
        }
    - ID: "acce9b46-1f19-4d3d-a0ec-ed01d807bb7d"
      Hint: RazorView
      Value: |
        @using TheAA.Foundation.Rendering;
        @using TheAA.Application.ViewModels;
        
        @inherits  HtmlTemplateBase<ContentViewRenderingModel>
        
        @if (Model == null)
        {
            return;
        }
        @{
            var mainHeading = Model.GetField("Main Heading");
            var subHeading = Model.GetField("Sub Heading");
            var description = Model.GetField("Description");
            var image = Model.GetField("Image");
            var imageAlignment = Model.GetRenderingParameterLookup("Image Alignment");
        }
        @helper GetBottomText(string imageAlignment, bool showWhenImageAlignmentRight)
        {
            var bottomText = Model.GetField("Bottom Text");
            if (bottomText.HasValueToRender())
            {
                if ((imageAlignment == "right" && showWhenImageAlignmentRight) ||
                (imageAlignment != "right" && !showWhenImageAlignmentRight))
                {
                    @:<div class="cta-list">
                        @bottomText.RenderValue();
                    @:</div>
                }
            }
        }
        <section class="@Model.GetRenderingParameterLookup("Background Color") @Model.GetTopAndBottomPaddings()">
            <div class="container list-component img-@imageAlignment">
                <div class="content">
                    @if (mainHeading.HasValueToRender())
                    {
                        <h2>@mainHeading.RenderValue()</h2>
                    }
                    @if (subHeading.HasValueToRender())
                    {
                        <h3>@subHeading.RenderValue()</h3>
                    }
                    @if (description.HasValueToRender())
                    {
                        <p>@description.RenderValue()</p>
                    }
                    <div class="body-text">
                        @Model.GetField("Body Text").RenderValue()
                    </div>
                    @GetBottomText(imageAlignment, false)
                </div>
                @if (image.HasValueToRender())
                {
                    var imageCaption = Model.GetField("Image caption");
                    <figure>
                        <img src="@image.MediaURL" alt="@image.Alt" loading="@Model.GetRenderingParameterLookup("Image Loading", "lazy")" class="@Model.GetRenderingParameterLookup("Image Size") @Model.GetRenderingParameterLookup("Image Border Radius")">
                        @if (imageCaption.HasValueToRender())
                        {
                            <figcaption>@imageCaption.RenderValue()</figcaption>
                        }
                    </figure>
                }
                @GetBottomText(imageAlignment, true)
            </div>
        </section>
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\rohit.pandey@assurex.co
    - ID: "c8f93afe-bfd4-4e8f-9c61-152559854661"
      Hint: __Valid from
      Value: 20250509T121051Z
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20250801T130356Z
