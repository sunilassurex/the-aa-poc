---
ID: "f1471b6a-4bfc-4877-ae86-eeb5c86a65b7"
Parent: "85d42321-8a7d-4e47-9c43-15b7304ef61a"
Template: "a3ceb52b-24fa-4eee-82f7-45faae145864"
Path: "/sitecore/content/AA/Beam/Modules/Html/contact-us/change-job-scripts/occupation-autocomplete"
SharedFields:
- ID: "a4f985d9-98b3-4b52-aaaf-4344f6e747c6"
  Hint: __Workflow
  Value: "{8500EC05-BF8F-468E-BC0D-95C9EAFC61A8}"
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 250
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20200408T144012Z
    - ID: "3e431de1-525e-47a3-b6b0-1ccbec3a8c98"
      Hint: __Workflow state
      Value: "{6E0F5D87-5659-4477-85AE-69804F614D51}"
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\PetersenP
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\PetersenP
    - ID: "6a07b214-41c9-4205-b62a-6005aa65a387"
      Hint: Contents
      Value: |
        <script>
            function autocomplete(inp, arrFunc) {
                var arr = arrFunc();
                var currentFocus;
                inp.addEventListener("input", function (e) {
                    var a, b, i, val = this.value;
                    closeAllLists();
                    if (!val) { return false; }
                    currentFocus = -1;
                    a = document.createElement("DIV");
                    a.setAttribute("id", this.id + "autocomplete-list");
                    a.setAttribute("class", "autocomplete-items");
                    this.parentNode.appendChild(a);
                    for (i = 0; i < arr.length; i++) {
                        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                            b = document.createElement("DIV");
                            b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                            b.innerHTML += arr[i].substr(val.length);
                            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                            b.addEventListener("click", function (e) {
                                inp.value = this.getElementsByTagName("input")[0].value;
                                closeAllLists();
                            });
                            a.appendChild(b);
                        }
                    }
                });
                inp.addEventListener("keydown", function (e) {
                    var x = document.getElementById(this.id + "autocomplete-list");
                    if (x) x = x.getElementsByTagName("div");
                    if (e.keyCode == 40) {
                        currentFocus++;
                        addActive(x);
                    } else if (e.keyCode == 38) {
                        currentFocus--;
                        addActive(x);
                    } else if (e.keyCode == 13) {
                        e.preventDefault();
                        if (currentFocus > -1) {
                            if (x) x[currentFocus].click();
                        }
                    }
                });
                function addActive(x) {
                    if (!x) return false;
                    removeActive(x);
                    if (currentFocus >= x.length) currentFocus = 0;
                    if (currentFocus < 0) currentFocus = (x.length - 1);
                    x[currentFocus].classList.add("autocomplete-active");
                }
                function removeActive(x) {
                    for (var i = 0; i < x.length; i++) {
                        x[i].classList.remove("autocomplete-active");
                    }
                }
                function closeAllLists(elmnt) {
                    var x = document.getElementsByClassName("autocomplete-items");
                    for (var i = 0; i < x.length; i++) {
                        if (elmnt != x[i] && elmnt != inp) {
                            x[i].parentNode.removeChild(x[i]);
                        }
                    }
                }
                document.addEventListener("click", function (e) {
                    closeAllLists(e.target);
                });
            }
        
            autocomplete(document.getElementById("wffmf6cd0587a48246eba761e330d5382f9d_Sections_3__Fields_2__Value"), function () { return occupationList; });
            autocomplete(document.getElementById("wffmf6cd0587a48246eba761e330d5382f9d_Sections_3__Fields_3__Value"), function () { return businessList; });
        
        
        
        </script>
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "e6f00b7e-96e4-4137-a581-b5824a75c70b"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\PetersenP
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20200414T134234Z
  - Version: 2
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20200414T135553Z
    - ID: "3e431de1-525e-47a3-b6b0-1ccbec3a8c98"
      Hint: __Workflow state
      Value: "{9CC7509E-B91B-4694-9A8F-AC84BBF84E8D}"
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\PetersenP
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\PetersenP
    - ID: "6a07b214-41c9-4205-b62a-6005aa65a387"
      Hint: Contents
      Value: |
        <script>
            function autocomplete(inp, arrFunc) {
        
                var arr = arrFunc();
                var thisInput = $(inp);
                thisInput.data('autocomplete-values', arr);
                thisInput.data('autocomplete-lock', false);
        
                // if the input doesnt contain a value from the list then change it to blank
                thisInput.change(function () {
                    var thisInput = $(this);
                    if (thisInput.data('autocomplete-lock') != true) {
                        thisInput.data('autocomplete-lock', true);
                        var arr = thisInput.data('autocomplete-values');
                        var val = thisInput.val();
                        var bFound = false;
                        var FoundValue = '';
                        for (i = 0; i < arr.length; i++) {
                            if (arr[i].toUpperCase() == val.toUpperCase()) {
                                bFound = true;
                                FoundValue = arr[i]; $(this).val('');
                                break;
                            }
                        }
        
                        if (bFound) {
                            // improve the case
                            if (thisInput.val() != FoundValue) {
                                $(this).val(FoundValue);
                            }
                        } else {
                            // dont allow values not in the list
                            $(this).val('');
                        }
                        //closeAllLists();
        
                        thisInput.data('autocomplete-lock', false);
                    }
                });
        
                var currentFocus;
                inp.addEventListener("input", function (e) {
                    var a, b, i, val = this.value;
                    closeAllLists();
                    if (!val) { return false; }
                    currentFocus = -1;
                    a = document.createElement("DIV");
                    a.setAttribute("id", this.id + "autocomplete-list");
                    a.setAttribute("class", "autocomplete-items");
                    this.parentNode.appendChild(a);
                    for (i = 0; i < arr.length; i++) {
                        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                            b = document.createElement("DIV");
                            b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                            b.innerHTML += arr[i].substr(val.length);
                            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                            b.addEventListener("click", function (e) {
                                var thisInput = $(inp);
                                thisInput.data('autocomplete-lock', true);
                                inp.value = this.getElementsByTagName("input")[0].value;
                                closeAllLists();
                                thisInput.data('autocomplete-lock', false);
                            });
                            a.appendChild(b);
                        }
                    }
                });
                inp.addEventListener("keydown", function (e) {
                    var x = document.getElementById(this.id + "autocomplete-list");
                    if (x) x = x.getElementsByTagName("div");
                    if (e.keyCode == 40) {
                        currentFocus++;
                        addActive(x);
                    } else if (e.keyCode == 38) {
                        currentFocus--;
                        addActive(x);
                    } else if (e.keyCode == 13) {
                        e.preventDefault();
                        if (currentFocus > -1) {
                            if (x) x[currentFocus].click();
                        }
                    }
                });
                function addActive(x) {
                    if (!x) return false;
                    removeActive(x);
                    if (currentFocus >= x.length) currentFocus = 0;
                    if (currentFocus < 0) currentFocus = (x.length - 1);
                    x[currentFocus].classList.add("autocomplete-active");
                }
                function removeActive(x) {
                    for (var i = 0; i < x.length; i++) {
                        x[i].classList.remove("autocomplete-active");
                    }
                }
                function closeAllLists(elmnt) {
                    var x = document.getElementsByClassName("autocomplete-items");
                    for (var i = 0; i < x.length; i++) {
                        if (elmnt != x[i] && elmnt != inp) {
                            x[i].parentNode.removeChild(x[i]);
                        }
                    }
                }
                document.addEventListener("click", function (e) {
                    closeAllLists(e.target);
                });
            }
        
            autocomplete(document.getElementById("fxb_8ad3997f-e9e8-4ef5-8bb8-33b29bafd6e8_Fields_330f3148-8af5-4260-92c9-077fcbc6ed97__Value"), function () { return occupationList; });
            autocomplete(document.getElementById("fxb_8ad3997f-e9e8-4ef5-8bb8-33b29bafd6e8_Fields_f38127c1-69e8-49c8-87c5-ac6c5036a1fa__Value"), function () { return businessList; });
        
        
        
        </script>
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "25dc949c-e004-4bf5-bbcb-38d3fc8fb7ab"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\admin
    - ID: "c8f93afe-bfd4-4e8f-9c61-152559854661"
      Hint: __Valid from
      Value: 20200414T135553Z
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20211201T113547Z
